(function(undef){function Vec2(x,y){if(!(this instanceof Vec2)){return new Vec2(x,y)}this.set(x||0,y||0)}Vec2.prototype={x:0,y:0,change:function(fn){if(fn){if(this.observers){this.observers.push(fn)}else{this.observers=[fn]}}else if(this.observers){for(var i=this.observers.length-1;i>=0;i--){this.observers[i](this)}}return this},ignore:function(fn){this.observers=this.observers.filter(function(cb){return cb!==fn});return this},dirty:function(){var cacheKeys=["__cachedLength","__cachedLengthSquared"];for(var i=0,l=cacheKeys.length;i<l;i++){this[cacheKeys[i]]=null}},set:function(x,y){this.x=x;this.y=y;this.dirty();return this.change()},zero:function(){return this.set(0,0)},clone:function(){return new Vec2(this.x,this.y)},negate:function(returnNew){if(returnNew){return new Vec2(-this.x,-this.y)}else{return this.set(-this.x,-this.y)}},add:function(vec2,returnNew){if(!returnNew){this.set(this.x+vec2.x,this.y+vec2.y);return this}else{return new Vec2(this.x+vec2.x,this.y+vec2.y)}},subtract:function(vec2,returnNew){if(!returnNew){this.x-=vec2.x;this.y-=vec2.y;return this}else{return new Vec2(this.x-vec2.x,this.y-vec2.y)}},multiply:function(vec2,returnNew){var x,y;if(vec2.x!==undef){x=vec2.x;y=vec2.y}else{x=y=vec2}if(!returnNew){return this.set(this.x*x,this.y*y)}else{return new Vec2(this.x*x,this.y*y)}},rotate:function(r,inverse,returnNew){var x=this.x,y=this.y,cos=Math.cos(r),sin=Math.sin(r),rx,ry;inverse=inverse?-1:1;rx=cos*x-inverse*sin*y;ry=inverse*sin*x+cos*y;if(returnNew){return new Vec2(rx,ry)}else{return this.set(rx,ry)}},__cachedLength:null,length:function(){if(this.__cachedLength===null){var x=this.x,y=this.y;this.__cachedLength=Math.sqrt(x*x+y*y)}return this.__cachedLength},__cachedLengthSquared:null,lengthSquared:function(){if(this.__cachedLengthSquared===null){var x=this.x,y=this.y;this.__cachedLengthSquared=x*x+y*y}return this.__cachedLengthSquared},distance:function(vec2){return this.subtract(vec2,true).length()},normalize:function(returnNew){var length=this.length();if(length<Number.MIN_VALUE){return 0}var invertedLength=1/length;if(!returnNew){this.set(this.x*invertedLength,this.y*invertedLength);return this}else{return new Vec2(this.x*invertedLength,this.y*invertedLength)}},equal:function(v,w){if(w===undef){return this.x===v.x&&this.y==v.y}else{return this.x===v&&this.y===w}},abs:function(returnNew){var x=Math.abs(this.x),y=Math.abs(this.y);if(returnNew){return new Vec2(x,y)}else{return this.set(x,y)}},min:function(v,returnNew){var tx=this.x,ty=this.y,vx=v.x,vy=v.y,x=tx<vx?tx:vx,y=ty<vy?ty:vy;if(returnNew){return new Vec2(x,y)}else{return this.set(x,y)}},max:function(v,returnNew){var tx=this.x,ty=this.y,vx=v.x,vy=v.y,x=tx>vx?tx:vx,y=ty>vy?ty:vy;if(returnNew){return new Vec2(x,y)}else{return this.set(x,y)}},clamp:function(low,high,returnNew){var ret=this.min(high,true).max(low);if(returnNew){return ret}else{return this.set(ret.x,ret.y)}},isValid:function(){return isFinite(this.x)&&isFinite(this.y)&&!isNaN(this.x)&&!isNaN(this.y)},skew:function(){return new Vec2(-this.y,this.x)},dot:function(b){return this.x*b.x+b.y*this.y},perpDot:function(b){return this.x*b.y-this.y*b.x},angleTo:function(vec){return Math.atan2(this.perpDot(vec),this.dot(vec))},divide:function(scalar,returnNew){if(scalar===0||isNaN(scalar)){throw new Error("division by zero")}if(returnNew){return new Vec2(this.x/scalar,this.y/scalar)}return this.set(this.x/scalar,this.y/scalar)},toArray:function(){return[this.x,this.y]},fromArray:function(array){return this.set(array[0],array[1])}};if(typeof module!=="undefined"){module.exports=Vec2}else{window.Vec2=Vec2}})();